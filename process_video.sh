#!/bin/bash
set -e

INPUT_FILE="$1"       # video g·ªëc
INTRO_FILE="$2"       # intro/outro n·∫øu c√≥
FLIP="$3"             # 0 = gi·ªØ nguy√™n, 2 = flip ngang
OUTPUT_FILE="$4"

if [ -z "$INPUT_FILE" ] || [ -z "$OUTPUT_FILE" ]; then
  echo "‚ùå Usage: $0 input.mp4 [intro.mp4] flip output.mp4"
  exit 1
fi

# -----------------------------
# T·∫°o filter video
# -----------------------------
VF_FILTERS="scale=1080:1920:force_original_aspect_ratio=decrease,"
VF_FILTERS+="pad=1080:1920:(ow-iw)/2:(oh-ih)/2,setsar=1:1,fps=30"

if [ "$FLIP" -eq 2 ]; then
  VF_FILTERS="$VF_FILTERS,hflip"
fi

# -----------------------------
# Encode INPUT
# -----------------------------
echo "üé¨ Encoding INPUT..."
ffmpeg -y -i "$INPUT_FILE" \
  -vf "$VF_FILTERS" \
  -c:v libx264 -preset slow -crf 18 -pix_fmt yuv420p -profile:v high \
  -c:a aac -b:a 192k -ar 44100 \
  -movflags +faststart -fflags +genpts \
  input_encoded.mp4

# -----------------------------
# Encode INTRO n·∫øu c√≥
# -----------------------------
if [ -n "$INTRO_FILE" ] && [ -f "$INTRO_FILE" ]; then
  echo "üé¨ Encoding INTRO..."
  ffmpeg -y -i "$INTRO_FILE" \
    -vf "scale=1080:1920:force_original_aspect_ratio=decrease,pad=1080:1920:(ow-iw)/2:(oh-ih)/2,setsar=1:1,fps=30" \
    -c:v libx264 -preset slow -crf 18 -pix_fmt yuv420p -profile:v high \
    -c:a aac -b:a 192k -ar 44100 \
    -movflags +faststart -fflags +genpts \
    intro_encoded.mp4

  echo "üîó Gh√©p INPUT + INTRO (re-encode ƒë·ªÉ tr√°nh l·ªách audio)..."
  ffmpeg -y -i "concat:input_encoded.mp4|intro_encoded.mp4" \
    -c:v libx264 -preset slow -crf 18 -pix_fmt yuv420p -profile:v high \
    -c:a aac -b:a 192k -ar 44100 \
    -movflags +faststart -fflags +genpts \
    "$OUTPUT_FILE"
else
  echo "üëâ Kh√¥ng c√≥ intro, ch·ªâ d√πng INPUT."
  mv input_encoded.mp4 "$OUTPUT_FILE"
fi

echo "‚úÖ Done! Output: $OUTPUT_FILE"
